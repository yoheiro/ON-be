cordova.define('com.unarin.cordova.beacon.Q', function (
  require,
  exports,
  module
) {
  !(function (a) {
    if (typeof bootstrap === 'function') bootstrap('promise', a);
    else if (typeof exports === 'object') module.exports = a();
    else if (typeof ses !== 'undefined') {
      if (!ses.ok()) return;
      ses.makeQ = a;
    } else Q = a();
  })(function () {
    'use strict';
    function a(a) {
      return function () {
        return V.apply(a, arguments);
      };
    }
    function b(a) {
      return a === Object(a);
    }
    function c(a) {
      return bb(a) === '[object StopIteration]' || a instanceof R;
    }
    function d(a, b) {
      if (
        O &&
        b.stack &&
        typeof a === 'object' &&
        a !== null &&
        a.stack &&
        !a.stack.includes(cb)
      ) {
        for (var c = [], d = b; d; d = d.source) d.stack && c.unshift(d.stack);
        c.unshift(a.stack);
        const f = c.join('\n' + cb + '\n');
        a.stack = e(f);
      }
    }
    function e(a) {
      for (var b = a.split('\n'), c = [], d = 0; d < b.length; ++d) {
        const e = b[d];
        h(e) || f(e) || !e || c.push(e);
      }
      return c.join('\n');
    }
    function f(a) {
      return a.includes('(module.js:') || a.includes('(node.js:');
    }
    function g(a) {
      const b = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(a);
      if (b) return [b[1], Number(b[2])];
      const c = /at ([^ ]+):(\d+):(?:\d+)$/.exec(a);
      if (c) return [c[1], Number(c[2])];
      const d = /.*@(.+):(\d+)$/.exec(a);
      return d ? [d[1], Number(d[2])] : void 0;
    }
    function h(a) {
      const b = g(a);
      if (!b) return !1;
      const c = b[0];
      const d = b[1];
      return c === Q && d >= S && gb >= d;
    }
    function i() {
      if (O)
        try {
          throw new Error();
        } catch (a) {
          const b = a.stack.split('\n');
          const c = b[0].indexOf('@') > 0 ? b[1] : b[2];
          const d = g(c);
          if (!d) return;
          return (Q = d[0]), d[1];
        }
    }
    function j(a, b, c) {
      return function () {
        return (
          typeof console !== 'undefined' &&
            typeof console.warn === 'function' &&
            console.warn(
              b + ' is deprecated, use ' + c + ' instead.',
              new Error('').stack
            ),
          a.apply(a, arguments)
        );
      };
    }
    function k(a) {
      return r(a) ? a : s(a) ? B(a) : A(a);
    }
    function l() {
      function a(a) {
        (b = a),
          (f.source = a),
          X(
            c,
            function (b, c) {
              U(function () {
                a.promiseDispatch.apply(a, c);
              });
            },
            void 0
          ),
          (c = void 0),
          (d = void 0);
      }
      let b;
      var c = [];
      var d = [];
      const e = $(l.prototype);
      var f = $(o.prototype);
      if (
        ((f.promiseDispatch = function (a, e, f) {
          const g = W(arguments);
          c
            ? (c.push(g), e === 'when' && f[1] && d.push(f[1]))
            : U(function () {
                b.promiseDispatch.apply(b, g);
              });
        }),
        (f.valueOf = function () {
          if (c) return f;
          const a = q(b);
          return r(a) && (b = a), a;
        }),
        (f.inspect = function () {
          return b ? b.inspect() : { state: 'pending' };
        }),
        k.longStackSupport && O)
      )
        try {
          throw new Error();
        } catch (g) {
          f.stack = g.stack.substring(g.stack.indexOf('\n') + 1);
        }
      return (
        (e.promise = f),
        (e.resolve = function (c) {
          b || a(k(c));
        }),
        (e.fulfill = function (c) {
          b || a(A(c));
        }),
        (e.reject = function (c) {
          b || a(z(c));
        }),
        (e.notify = function (a) {
          b ||
            X(
              d,
              function (b, c) {
                U(function () {
                  c(a);
                });
              },
              void 0
            );
        }),
        e
      );
    }
    function m(a) {
      if (typeof a !== 'function')
        throw new TypeError('resolver must be a function.');
      const b = l();
      try {
        a(b.resolve, b.reject, b.notify);
      } catch (c) {
        b.reject(c);
      }
      return b.promise;
    }
    function n(a) {
      return m(function (b, c) {
        for (let d = 0, e = a.length; e > d; d++) k(a[d]).then(b, c);
      });
    }
    function o(a, b, c) {
      void 0 === b &&
        (b = function (a) {
          return z(new Error('Promise does not support operation: ' + a));
        }),
        void 0 === c &&
          (c = function () {
            return { state: 'unknown' };
          });
      const d = $(o.prototype);
      if (
        ((d.promiseDispatch = function (c, e, f) {
          let g;
          try {
            g = a[e] ? a[e].apply(d, f) : b.call(d, e, f);
          } catch (h) {
            g = z(h);
          }
          c && c(g);
        }),
        (d.inspect = c),
        c)
      ) {
        const e = c();
        e.state === 'rejected' && (d.exception = e.reason),
          (d.valueOf = function () {
            const a = c();
            return a.state === 'pending' || a.state === 'rejected'
              ? d
              : a.value;
          });
      }
      return d;
    }
    function p(a, b, c, d) {
      return k(a).then(b, c, d);
    }
    function q(a) {
      if (r(a)) {
        const b = a.inspect();
        if (b.state === 'fulfilled') return b.value;
      }
      return a;
    }
    function r(a) {
      return (
        b(a) &&
        typeof a.promiseDispatch === 'function' &&
        typeof a.inspect === 'function'
      );
    }
    function s(a) {
      return b(a) && typeof a.then === 'function';
    }
    function t(a) {
      return r(a) && a.inspect().state === 'pending';
    }
    function u(a) {
      return !r(a) || a.inspect().state === 'fulfilled';
    }
    function v(a) {
      return r(a) && a.inspect().state === 'rejected';
    }
    function w() {
      (db.length = 0), (eb.length = 0), fb || (fb = !0);
    }
    function x(a, b) {
      fb &&
        (eb.push(a),
        db.push(
          b && typeof b.stack !== 'undefined' ? b.stack : '(no stack) ' + b
        ));
    }
    function y(a) {
      if (fb) {
        const b = Y(eb, a);
        b !== -1 && (eb.splice(b, 1), db.splice(b, 1));
      }
    }
    function z(a) {
      const b = o(
        {
          when(b) {
            return b && y(this), b ? b(a) : this;
          },
        },
        function () {
          return this;
        },
        function () {
          return { state: 'rejected', reason: a };
        }
      );
      return x(b, a), b;
    }
    function A(a) {
      return o(
        {
          when() {
            return a;
          },
          get(b) {
            return a[b];
          },
          set(b, c) {
            a[b] = c;
          },
          delete(b) {
            delete a[b];
          },
          post(b, c) {
            return b === null || void 0 === b
              ? a.apply(void 0, c)
              : a[b].apply(a, c);
          },
          apply(b, c) {
            return a.apply(b, c);
          },
          keys() {
            return ab(a);
          },
        },
        void 0,
        function () {
          return { state: 'fulfilled', value: a };
        }
      );
    }
    function B(a) {
      const b = l();
      return (
        U(function () {
          try {
            a.then(b.resolve, b.reject, b.notify);
          } catch (c) {
            b.reject(c);
          }
        }),
        b.promise
      );
    }
    function C(a) {
      return o(
        { isDef() {} },
        function (b, c) {
          return I(a, b, c);
        },
        function () {
          return k(a).inspect();
        }
      );
    }
    function D(a, b, c) {
      return k(a).spread(b, c);
    }
    function E(a) {
      return function () {
        function b(a, b) {
          let g;
          if (typeof StopIteration === 'undefined') {
            try {
              g = d[a](b);
            } catch (h) {
              return z(h);
            }
            return g.done ? k(g.value) : p(g.value, e, f);
          }
          try {
            g = d[a](b);
          } catch (h) {
            return c(h) ? k(h.value) : z(h);
          }
          return p(g, e, f);
        }
        var d = a.apply(this, arguments);
        var e = b.bind(b, 'next');
        var f = b.bind(b, 'throw');
        return e();
      };
    }
    function F(a) {
      k.done(k.async(a)());
    }
    function G(a) {
      throw new R(a);
    }
    function H(a) {
      return function () {
        return D([this, J(arguments)], function (b, c) {
          return a.apply(b, c);
        });
      };
    }
    function I(a, b, c) {
      return k(a).dispatch(b, c);
    }
    function J(a) {
      return p(a, function (a) {
        let b = 0;
        const c = l();
        return (
          X(
            a,
            function (d, e, f) {
              let g;
              r(e) && (g = e.inspect()).state === 'fulfilled'
                ? (a[f] = g.value)
                : (++b,
                  p(
                    e,
                    function (d) {
                      (a[f] = d), --b === 0 && c.resolve(a);
                    },
                    c.reject,
                    function (a) {
                      c.notify({ index: f, value: a });
                    }
                  ));
            },
            void 0
          ),
          b === 0 && c.resolve(a),
          c.promise
        );
      });
    }
    function K(a) {
      return p(a, function (a) {
        return (
          (a = Z(a, k)),
          p(
            J(
              Z(a, function (a) {
                return p(a, T, T);
              })
            ),
            function () {
              return a;
            }
          )
        );
      });
    }
    function L(a) {
      return k(a).allSettled();
    }
    function M(a, b) {
      return k(a).then(void 0, void 0, b);
    }
    function N(a, b) {
      return k(a).nodeify(b);
    }
    var O = !1;
    try {
      throw new Error();
    } catch (P) {
      O = !!P.stack;
    }
    let Q;
    let R;
    var S = i();
    var T = function () {};
    var U = (function () {
      function a() {
        for (; b.next; ) {
          b = b.next;
          const c = b.task;
          b.task = void 0;
          const e = b.domain;
          e && ((b.domain = void 0), e.enter());
          try {
            c();
          } catch (g) {
            if (f) throw (e && e.exit(), setTimeout(a, 0), e && e.enter(), g);
            setTimeout(function () {
              throw g;
            }, 0);
          }
          e && e.exit();
        }
        d = !1;
      }
      var b = { task: void 0, next: null };
      let c = b;
      var d = !1;
      let e = void 0;
      var f = !1;
      if (
        ((U = function (a) {
          (c = c.next = { task: a, domain: f && process.domain, next: null }),
            d || ((d = !0), e());
        }),
        typeof process !== 'undefined' && process.nextTick)
      )
        (f = !0),
          (e = function () {
            process.nextTick(a);
          });
      else if (typeof setImmediate === 'function')
        e =
          typeof window !== 'undefined'
            ? setImmediate.bind(window, a)
            : function () {
                setImmediate(a);
              };
      else if (typeof MessageChannel !== 'undefined') {
        const g = new MessageChannel();
        g.port1.onmessage = function () {
          (e = h), (g.port1.onmessage = a), a();
        };
        var h = function () {
          g.port2.postMessage(0);
        };
        e = function () {
          setTimeout(a, 0), h();
        };
      } else
        e = function () {
          setTimeout(a, 0);
        };
      return U;
    })();
    var V = Function.call;
    var W = a(Array.prototype.slice);
    var X = a(
      Array.prototype.reduce ||
        function (a, b) {
          let c = 0;
          const d = this.length;
          if (arguments.length === 1)
            for (;;) {
              if (c in this) {
                b = this[c++];
                break;
              }
              if (++c >= d) throw new TypeError();
            }
          for (; d > c; c++) c in this && (b = a(b, this[c], c));
          return b;
        }
    );
    var Y = a(
      Array.prototype.indexOf ||
        function (a) {
          for (let b = 0; b < this.length; b++) if (this[b] === a) return b;
          return -1;
        }
    );
    var Z = a(
      Array.prototype.map ||
        function (a, b) {
          const c = this;
          const d = [];
          return (
            X(
              c,
              function (e, f, g) {
                d.push(a.call(b, f, g, c));
              },
              void 0
            ),
            d
          );
        }
    );
    var $ =
      Object.create ||
      function (a) {
        function b() {}
        return (b.prototype = a), new b();
      };
    const _ = a(Object.prototype.hasOwnProperty);
    var ab =
      Object.keys ||
      function (a) {
        const b = [];
        for (const c in a) _(a, c) && b.push(c);
        return b;
      };
    var bb = a(Object.prototype.toString);
    R =
      typeof ReturnValue !== 'undefined'
        ? ReturnValue
        : function (a) {
            this.value = a;
          };
    var cb = 'From previous event:';
    (k.resolve = k),
      (k.nextTick = U),
      (k.longStackSupport = !1),
      (k.defer = l),
      (l.prototype.makeNodeResolver = function () {
        const a = this;
        return function (b, c) {
          b
            ? a.reject(b)
            : a.resolve(arguments.length > 2 ? W(arguments, 1) : c);
        };
      }),
      (k.Promise = m),
      (k.promise = m),
      (m.race = n),
      (m.all = J),
      (m.reject = z),
      (m.resolve = k),
      (k.passByCopy = function (a) {
        return a;
      }),
      (o.prototype.passByCopy = function () {
        return this;
      }),
      (k.join = function (a, b) {
        return k(a).join(b);
      }),
      (o.prototype.join = function (a) {
        return k([this, a]).spread(function (a, b) {
          if (a === b) return a;
          throw new Error("Can't join: not the same: " + a + ' ' + b);
        });
      }),
      (k.race = n),
      (o.prototype.race = function () {
        return this.then(k.race);
      }),
      (k.makePromise = o),
      (o.prototype.toString = function () {
        return '[object Promise]';
      }),
      (o.prototype.then = function (a, b, c) {
        function e(b) {
          try {
            return typeof a === 'function' ? a(b) : b;
          } catch (c) {
            return z(c);
          }
        }
        function f(a) {
          if (typeof b === 'function') {
            d(a, h);
            try {
              return b(a);
            } catch (c) {
              return z(c);
            }
          }
          return z(a);
        }
        function g(a) {
          return typeof c === 'function' ? c(a) : a;
        }
        var h = this;
        const i = l();
        let j = !1;
        return (
          U(function () {
            h.promiseDispatch(
              function (a) {
                j || ((j = !0), i.resolve(e(a)));
              },
              'when',
              [
                function (a) {
                  j || ((j = !0), i.resolve(f(a)));
                },
              ]
            );
          }),
          h.promiseDispatch(void 0, 'when', [
            void 0,
            function (a) {
              let b;
              let c = !1;
              try {
                b = g(a);
              } catch (d) {
                if (((c = !0), !k.onerror)) throw d;
                k.onerror(d);
              }
              c || i.notify(b);
            },
          ]),
          i.promise
        );
      }),
      (k.when = p),
      (o.prototype.thenResolve = function (a) {
        return this.then(function () {
          return a;
        });
      }),
      (k.thenResolve = function (a, b) {
        return k(a).thenResolve(b);
      }),
      (o.prototype.thenReject = function (a) {
        return this.then(function () {
          throw a;
        });
      }),
      (k.thenReject = function (a, b) {
        return k(a).thenReject(b);
      }),
      (k.nearer = q),
      (k.isPromise = r),
      (k.isPromiseAlike = s),
      (k.isPending = t),
      (o.prototype.isPending = function () {
        return this.inspect().state === 'pending';
      }),
      (k.isFulfilled = u),
      (o.prototype.isFulfilled = function () {
        return this.inspect().state === 'fulfilled';
      }),
      (k.isRejected = v),
      (o.prototype.isRejected = function () {
        return this.inspect().state === 'rejected';
      });
    var db = [];
    var eb = [];
    var fb = !0;
    (k.resetUnhandledRejections = w),
      (k.getUnhandledReasons = function () {
        return db.slice();
      }),
      (k.stopUnhandledRejectionTracking = function () {
        w(), (fb = !1);
      }),
      w(),
      (k.reject = z),
      (k.fulfill = A),
      (k.master = C),
      (k.spread = D),
      (o.prototype.spread = function (a, b) {
        return this.all().then(function (b) {
          return a.apply(void 0, b);
        }, b);
      }),
      (k.async = E),
      (k.spawn = F),
      (k.return = G),
      (k.promised = H),
      (k.dispatch = I),
      (o.prototype.dispatch = function (a, b) {
        const c = this;
        const d = l();
        return (
          U(function () {
            c.promiseDispatch(d.resolve, a, b);
          }),
          d.promise
        );
      }),
      (k.get = function (a, b) {
        return k(a).dispatch('get', [b]);
      }),
      (o.prototype.get = function (a) {
        return this.dispatch('get', [a]);
      }),
      (k.set = function (a, b, c) {
        return k(a).dispatch('set', [b, c]);
      }),
      (o.prototype.set = function (a, b) {
        return this.dispatch('set', [a, b]);
      }),
      (k.del = k.delete = function (a, b) {
        return k(a).dispatch('delete', [b]);
      }),
      (o.prototype.del = o.prototype.delete = function (a) {
        return this.dispatch('delete', [a]);
      }),
      (k.mapply = k.post = function (a, b, c) {
        return k(a).dispatch('post', [b, c]);
      }),
      (o.prototype.mapply = o.prototype.post = function (a, b) {
        return this.dispatch('post', [a, b]);
      }),
      (k.send = k.mcall = k.invoke = function (a, b) {
        return k(a).dispatch('post', [b, W(arguments, 2)]);
      }),
      (o.prototype.send = o.prototype.mcall = o.prototype.invoke = function (
        a
      ) {
        return this.dispatch('post', [a, W(arguments, 1)]);
      }),
      (k.fapply = function (a, b) {
        return k(a).dispatch('apply', [void 0, b]);
      }),
      (o.prototype.fapply = function (a) {
        return this.dispatch('apply', [void 0, a]);
      }),
      (k.try = k.fcall = function (a) {
        return k(a).dispatch('apply', [void 0, W(arguments, 1)]);
      }),
      (o.prototype.fcall = function () {
        return this.dispatch('apply', [void 0, W(arguments)]);
      }),
      (k.fbind = function (a) {
        const b = k(a);
        const c = W(arguments, 1);
        return function () {
          return b.dispatch('apply', [this, c.concat(W(arguments))]);
        };
      }),
      (o.prototype.fbind = function () {
        const a = this;
        const b = W(arguments);
        return function () {
          return a.dispatch('apply', [this, b.concat(W(arguments))]);
        };
      }),
      (k.keys = function (a) {
        return k(a).dispatch('keys', []);
      }),
      (o.prototype.keys = function () {
        return this.dispatch('keys', []);
      }),
      (k.all = J),
      (o.prototype.all = function () {
        return J(this);
      }),
      (k.allResolved = j(K, 'allResolved', 'allSettled')),
      (o.prototype.allResolved = function () {
        return K(this);
      }),
      (k.allSettled = L),
      (o.prototype.allSettled = function () {
        return this.then(function (a) {
          return J(
            Z(a, function (a) {
              function b() {
                return a.inspect();
              }
              return (a = k(a)), a.then(b, b);
            })
          );
        });
      }),
      (k.fail = k.catch = function (a, b) {
        return k(a).then(void 0, b);
      }),
      (o.prototype.fail = o.prototype.catch = function (a) {
        return this.then(void 0, a);
      }),
      (k.progress = M),
      (o.prototype.progress = function (a) {
        return this.then(void 0, void 0, a);
      }),
      (k.fin = k.finally = function (a, b) {
        return k(a).finally(b);
      }),
      (o.prototype.fin = o.prototype.finally = function (a) {
        return (
          (a = k(a)),
          this.then(
            function (b) {
              return a.fcall().then(function () {
                return b;
              });
            },
            function (b) {
              return a.fcall().then(function () {
                throw b;
              });
            }
          )
        );
      }),
      (k.done = function (a, b, c, d) {
        return k(a).done(b, c, d);
      }),
      (o.prototype.done = function (a, b, c) {
        let e = function (a) {
          U(function () {
            if ((d(a, f), !k.onerror)) throw a;
            k.onerror(a);
          });
        };
        var f = a || b || c ? this.then(a, b, c) : this;
        typeof process === 'object' &&
          process &&
          process.domain &&
          (e = process.domain.bind(e)),
          f.then(void 0, e);
      }),
      (k.timeout = function (a, b, c) {
        return k(a).timeout(b, c);
      }),
      (o.prototype.timeout = function (a, b) {
        const c = l();
        const d = setTimeout(function () {
          (b && typeof b !== 'string') ||
            ((b = new Error(b || 'Timed out after ' + a + ' ms')),
            (b.code = 'ETIMEDOUT')),
            c.reject(b);
        }, a);
        return (
          this.then(
            function (a) {
              clearTimeout(d), c.resolve(a);
            },
            function (a) {
              clearTimeout(d), c.reject(a);
            },
            c.notify
          ),
          c.promise
        );
      }),
      (k.delay = function (a, b) {
        return void 0 === b && ((b = a), (a = void 0)), k(a).delay(b);
      }),
      (o.prototype.delay = function (a) {
        return this.then(function (b) {
          const c = l();
          return (
            setTimeout(function () {
              c.resolve(b);
            }, a),
            c.promise
          );
        });
      }),
      (k.nfapply = function (a, b) {
        return k(a).nfapply(b);
      }),
      (o.prototype.nfapply = function (a) {
        const b = l();
        const c = W(a);
        return (
          c.push(b.makeNodeResolver()), this.fapply(c).fail(b.reject), b.promise
        );
      }),
      (k.nfcall = function (a) {
        const b = W(arguments, 1);
        return k(a).nfapply(b);
      }),
      (o.prototype.nfcall = function () {
        const a = W(arguments);
        const b = l();
        return (
          a.push(b.makeNodeResolver()), this.fapply(a).fail(b.reject), b.promise
        );
      }),
      (k.nfbind = k.denodeify = function (a) {
        const b = W(arguments, 1);
        return function () {
          const c = b.concat(W(arguments));
          const d = l();
          return (
            c.push(d.makeNodeResolver()),
            k(a).fapply(c).fail(d.reject),
            d.promise
          );
        };
      }),
      (o.prototype.nfbind = o.prototype.denodeify = function () {
        const a = W(arguments);
        return a.unshift(this), k.denodeify.apply(void 0, a);
      }),
      (k.nbind = function (a, b) {
        const c = W(arguments, 2);
        return function () {
          function d() {
            return a.apply(b, arguments);
          }
          const e = c.concat(W(arguments));
          const f = l();
          return (
            e.push(f.makeNodeResolver()),
            k(d).fapply(e).fail(f.reject),
            f.promise
          );
        };
      }),
      (o.prototype.nbind = function () {
        const a = W(arguments, 0);
        return a.unshift(this), k.nbind.apply(void 0, a);
      }),
      (k.nmapply = k.npost = function (a, b, c) {
        return k(a).npost(b, c);
      }),
      (o.prototype.nmapply = o.prototype.npost = function (a, b) {
        const c = W(b || []);
        const d = l();
        return (
          c.push(d.makeNodeResolver()),
          this.dispatch('post', [a, c]).fail(d.reject),
          d.promise
        );
      }),
      (k.nsend = k.nmcall = k.ninvoke = function (a, b) {
        const c = W(arguments, 2);
        const d = l();
        return (
          c.push(d.makeNodeResolver()),
          k(a).dispatch('post', [b, c]).fail(d.reject),
          d.promise
        );
      }),
      (o.prototype.nsend = o.prototype.nmcall = o.prototype.ninvoke = function (
        a
      ) {
        const b = W(arguments, 1);
        const c = l();
        return (
          b.push(c.makeNodeResolver()),
          this.dispatch('post', [a, b]).fail(c.reject),
          c.promise
        );
      }),
      (k.nodeify = N),
      (o.prototype.nodeify = function (a) {
        return a
          ? void this.then(
              function (b) {
                U(function () {
                  a(null, b);
                });
              },
              function (b) {
                U(function () {
                  a(b);
                });
              }
            )
          : this;
      });
    var gb = i();
    return k;
  });
});
